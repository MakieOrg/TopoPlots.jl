var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TopoPlots","category":"page"},{"location":"#TopoPlots","page":"Home","title":"TopoPlots","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TopoPlots.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using LinearAlgebra, Statistics, TopoPlots, CairoMakie\n\ndata = Array{Float32}(undef, 64, 400, 3)\nread!(TopoPlots.assetpath(\"example-data.bin\"), data)\n\npositions = Vector{Point2f}(undef, 64)\nread!(TopoPlots.assetpath(\"layout64.bin\"), positions)\n\nf = Figure(resolution=(1000, 1000))\ninterpolators = [DelaunayMesh(), ClaughTochter(), SplineInterpolator()]\ndata_slice = data[:, 360, 1]\n\nfor (i, interpolation) in enumerate(interpolators)\n    j = i == 3 ? (:) : i\n    TopoPlots.topoplot(\n        f[((i - 1) รท 2) + 1, j], data_slice, positions;\n        contours=true,\n        interpolation=interpolation,\n        labels = string.(1:length(positions)), colorrange=(-1, 1),\n        axis=(type=Axis, title=\"$(typeof(interpolation))()\",aspect=DataAspect(),))\nend\nf","category":"page"},{"location":"","page":"Home","title":"Home","text":"f = Figure(resolution=(1000, 1000))\ns = Slider(f[:, 1], range=1:size(data, 2), startvalue=351)\ndata_obs = map(s.value) do idx\n    data[:, idx, 1]\nend\nTopoPlots.topoplot(\n    f[2, 1],\n    data_obs, positions,\n    interpolation=DelaunayMesh(),\n    labels = string.(1:length(positions)),\n    colorrange=(-1, 1),\n    colormap=[:red, :blue],\n    axis=(title=\"delaunay mesh\",aspect=DataAspect(),))\nf","category":"page"},{"location":"","page":"Home","title":"Home","text":"TopoPlots.topoplot(\n    data[:, 340, 1], positions,\n    axis=(; aspect=DataAspect()),\n    colorrange=(-1, 1),\n    padding_geometry = Rect,\n    labels = string.(1:length(positions)),\n    label_text=(; color=:white),\n    label_scatter=(; strokewidth=2),\n    contours=(linestyle=:dot, linewidth=2))","category":"page"},{"location":"","page":"Home","title":"Home","text":"labels = string.(1:length(positions))\nTopoPlots.eegtopoplot(data[:, 340, 1], labels; positions=positions, axis=(aspect=DataAspect(),))","category":"page"},{"location":"","page":"Home","title":"Home","text":"labels = TopoPlots.CHANNELS_10_20\nTopoPlots.eegtopoplot(data[1:19, 340, 1], labels; axis=(aspect=DataAspect(),), label_text=true, label_scatter=(markersize=10, strokewidth=2,))","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TopoPlots]","category":"page"},{"location":"#TopoPlots.ClaughTochter","page":"Home","title":"TopoPlots.ClaughTochter","text":"ClaughTochter(fill_value=NaN, tol=nothing, maxiter=nothing, rescale=nothing)\n\nUses SciPy.interpolate.CloughTocher2DInterpolator under the Hood.\n\n\n\n\n\n","category":"type"},{"location":"#TopoPlots.SplineInterpolator","page":"Home","title":"TopoPlots.SplineInterpolator","text":"SplineInterpolator(;kx=2, ky=2, smoothing=0.5)\n\nUses Dierckx.Spline2D for interpolation.\n\n\n\n\n\n","category":"type"},{"location":"#TopoPlots.enclosing_geometry","page":"Home","title":"TopoPlots.enclosing_geometry","text":"enclosing_geometry(G::Type{<: Geometry}, positions, enlarge=0.0)\n\nReturns the Geometry of Type G, that best fits all positions. The Geometry can be enlarged by 1.x, so e.g. enclosing_geometry(Circle, positions, 0.1) will return a Circle that encloses all positions with a padding of 10%.\n\n\n\n\n\n","category":"function"},{"location":"#TopoPlots.labels2positions-Tuple{Any}","page":"Home","title":"TopoPlots.labels2positions","text":"labels2positions(labels)\n\nCurrently only supports 10/20 layout, by looking it up in TopoPlots.CHANNEL_TO_POSITION_10_20.\n\n\n\n\n\n","category":"method"},{"location":"#TopoPlots.pad_boundary!-Union{Tuple{Geometry}, Tuple{Type{Geometry}, Any}, Tuple{Type{Geometry}, Any, Any}} where Geometry","page":"Home","title":"TopoPlots.pad_boundary!","text":"pad_boundary(::Type{Geometry}, positions, enlarge=0.2) where Geometry\n\nAdds new points to positions, adding the boundary from enclosing all positions with Geometry. See TopoPlots.enclosing_geometry for more details about the boundary.\n\n\n\n\n\n","category":"method"},{"location":"#TopoPlots.topoplot!-Tuple","page":"Home","title":"TopoPlots.topoplot!","text":"topoplot(positions, data)\n\ncolormap = Reverse(:RdBu):\ncolorrange = Makie.automatic:\nlabels = nothing:\nlevels = 6:\nlinecolor = (:black, 0.5):\ninterpolation = ClaughTochter():\npadding_geometry  = Circle:\npadding = 0.1:\npad_value = 0.0:\nresolution = (512, 512):\nlabel_text = nothing: true -> add label for each position, NamedTuple -> gets passed to the text! call!\nlabel_scatter = nothing:  true -> add point for each position, NamedTuple -> gets passed to the scatter! call!\ncontours = nothing:  true -> add point for each position, NamedTuple -> gets passed to the contour! call!\n\n\n\n\n\n","category":"method"},{"location":"#TopoPlots.topoplot-Tuple","page":"Home","title":"TopoPlots.topoplot","text":"topoplot(positions, data)\n\ncolormap = Reverse(:RdBu):\ncolorrange = Makie.automatic:\nlabels = nothing:\nlevels = 6:\nlinecolor = (:black, 0.5):\ninterpolation = ClaughTochter():\npadding_geometry  = Circle:\npadding = 0.1:\npad_value = 0.0:\nresolution = (512, 512):\nlabel_text = nothing: true -> add label for each position, NamedTuple -> gets passed to the text! call!\nlabel_scatter = nothing:  true -> add point for each position, NamedTuple -> gets passed to the scatter! call!\ncontours = nothing:  true -> add point for each position, NamedTuple -> gets passed to the contour! call!\n\n\n\n\n\n","category":"method"}]
}
